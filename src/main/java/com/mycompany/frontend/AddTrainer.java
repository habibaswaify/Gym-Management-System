/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.frontend;

import com.mycompany.backend.general.Utils;
import com.mycompany.backend.system.AdminRole;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Mina
 */
public class AddTrainer extends javax.swing.JFrame {

    /**
     * Creates new form AddTrainer
     */
    AdminRole adminRole;
    Utils utilValidations;
    public AddTrainer(AdminRole adminRole) {
        this.adminRole = adminRole;
        this.utilValidations = new Utils();
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        iDTextField = new javax.swing.JTextField();
        nameTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        specialityTextField = new javax.swing.JTextField();
        phoneNumberTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID");

        jLabel2.setText("Name");

        jLabel3.setText("Email");

        jLabel4.setText("Speciality");

        jLabel5.setText("Phone Number");

        jButton1.setText("Add Trainer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(iDTextField)
                        .addComponent(nameTextField)
                        .addComponent(emailTextField)
                        .addComponent(specialityTextField)
                        .addComponent(phoneNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(specialityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(37, 37, 37)
                .addComponent(jButton1)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        boolean validInput = true;
        String name = nameTextField.getText();
        String ID = iDTextField.getText();
        String email = emailTextField.getText();
        String phoneNumber = phoneNumberTextField.getText();
        String speciality = specialityTextField.getText();
        if (ID.equalsIgnoreCase("")) {
        JOptionPane.showMessageDialog(AddTrainer.this,
                "Error: ID field is empty.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    } else if (!utilValidations.validateTrainerID(ID)) {
        JOptionPane.showMessageDialog(AddTrainer.this,
                "Error: invalid ID.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    } else if (utilValidations.recordExists(adminRole.getListOfTrainers(), ID)) {
        JOptionPane.showMessageDialog(AddTrainer.this,
                "Error: Trainer with ID " + ID + " already exists",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;

    }
    // Validate name
    else if (name.equalsIgnoreCase("")) {
        JOptionPane.showMessageDialog(AddTrainer.this,
                "Error: name field is empty.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    } else if (!utilValidations.validateName(name)) {
        JOptionPane.showMessageDialog(AddTrainer.this,
                "Error: invalid name.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    }
    // Validate email
    else if (email.equalsIgnoreCase("")) {
        JOptionPane.showMessageDialog(AddTrainer.this,
                "Error: email field is empty.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    } else if (!utilValidations.validateEmail(email)) {
        JOptionPane.showMessageDialog(AddTrainer.this,
                "Error: invalid email.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    }
    // Validate membership
    else if (speciality.equalsIgnoreCase("")) {
        JOptionPane.showMessageDialog(AddTrainer.this,
                "Error: speciality field is empty.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    }
//    } else if (!utilValidations.validateMembership(membership)) {
//        JOptionPane.showMessageDialog(AddMember.this,
//                "Error: invalid membership type.",
//                "Input Error",
//                JOptionPane.ERROR_MESSAGE);
//        validInput = false;
//    }
    // Validate phone number
    else if (phoneNumber.equalsIgnoreCase("")) {
        JOptionPane.showMessageDialog(AddTrainer.this,
                "Error: phone number field is empty.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    } else if (!utilValidations.validatePhoneNumber(phoneNumber)) {
        JOptionPane.showMessageDialog(AddTrainer.this,
                "Error: invalid phone number.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    }

    if (validInput) {
        JOptionPane.showMessageDialog(AddTrainer.this,
                "Member with ID  " + ID + " was added successfully!",
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
        adminRole.addTrainer(ID, utilValidations.capitalize(name), email, speciality, phoneNumber);
        dispose();

    }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    AdminRole adminRole = new AdminRole();
                    new AddTrainer(adminRole).setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(AddTrainer.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField emailTextField;
    private javax.swing.JTextField iDTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField phoneNumberTextField;
    private javax.swing.JTextField specialityTextField;
    // End of variables declaration//GEN-END:variables
}
