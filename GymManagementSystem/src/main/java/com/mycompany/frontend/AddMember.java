/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.frontend;
import com.mycompany.backend.general.Utils;
import com.mycompany.backend.trainer.TrainerRole;
import javax.swing.JOptionPane;

/**
 *
 * @author habib
 */

public class AddMember extends javax.swing.JFrame {
    TrainerRole trainerRole;
    Utils utilValidations ;


    /**
     * Creates new form AddMember
     * @param trainerRole
     */
    public AddMember(TrainerRole trainerRole) {
        this.trainerRole = trainerRole;
        this.utilValidations = new Utils();
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        IDTextField = new javax.swing.JTextField();
        nameTextField = new javax.swing.JTextField();
        membershipText = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        phoneNumberText = new javax.swing.JTextField();
        statusTextField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID");

        jLabel2.setText("Name");

        jLabel3.setText("Email");

        jLabel4.setText("Membership Type");

        jLabel5.setText("Phone Number");

        jLabel6.setText("Status");

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phoneNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(membershipText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(168, Short.MAX_VALUE)
                .addComponent(addButton)
                .addGap(160, 160, 160))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(IDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(membershipText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(phoneNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(statusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addButton)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
    boolean validInput = true;
    String name = nameTextField.getText();
    String ID = IDTextField.getText();
    String email = emailTextField.getText();
    String membership = membershipText.getText();
    String phoneNumber = phoneNumberText.getText();
    String status = statusTextField.getText();
    // Validate ID
    if (ID.equalsIgnoreCase("")) {
        JOptionPane.showMessageDialog(AddMember.this,
                "Error: ID field is empty.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    } else if (!utilValidations.validateMemberID(ID)) {
        JOptionPane.showMessageDialog(AddMember.this,
                "Error: invalid ID.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    } else if (utilValidations.recordExists(trainerRole.getListOfMembers(), ID)) {
        JOptionPane.showMessageDialog(AddMember.this,
                "Error: Member with ID " + ID + " already exists",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;

    }
    // Validate name
    else if (name.equalsIgnoreCase("")) {
        JOptionPane.showMessageDialog(AddMember.this,
                "Error: name field is empty.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    } else if (!utilValidations.validateName(name)) {
        JOptionPane.showMessageDialog(AddMember.this,
                "Error: invalid name.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    }
    // Validate email
    else if (email.equalsIgnoreCase("")) {
        JOptionPane.showMessageDialog(AddMember.this,
                "Error: email field is empty.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    } else if (!utilValidations.validateEmail(email)) {
        JOptionPane.showMessageDialog(AddMember.this,
                "Error: invalid email.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    }
    // Validate membership
    else if (membership.equalsIgnoreCase("")) {
        JOptionPane.showMessageDialog(AddMember.this,
                "Error: membership field is empty.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    } else if (!utilValidations.validateMembership(membership)) {
        JOptionPane.showMessageDialog(AddMember.this,
                "Error: invalid membership type.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    }
    // Validate phone number
    else if (phoneNumber.equalsIgnoreCase("")) {
        JOptionPane.showMessageDialog(AddMember.this,
                "Error: phone number field is empty.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    } else if (!utilValidations.validatePhoneNumber(phoneNumber)) {
        JOptionPane.showMessageDialog(AddMember.this,
                "Error: invalid phone number.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    }
    // Validate status
    else if (status.equalsIgnoreCase("")) {
        JOptionPane.showMessageDialog(AddMember.this,
                "Error: status field is empty.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    } else if (!utilValidations.validateStatus(status)) {
        JOptionPane.showMessageDialog(AddMember.this,
                "Error: invalid status.",
                "Input Error",
                JOptionPane.ERROR_MESSAGE);
        validInput = false;
    }

    if (validInput) {
        JOptionPane.showMessageDialog(AddMember.this,
                "Member with ID  " + ID + " was added successfully!",
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
        trainerRole.addMember(ID, utilValidations.capitalize(name), utilValidations.capitalize(membership), email, phoneNumber, utilValidations.capitalize(status));
        dispose();

    }

    }//GEN-LAST:event_addButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IDTextField;
    private javax.swing.JButton addButton;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField membershipText;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField phoneNumberText;
    private javax.swing.JTextField statusTextField;
    // End of variables declaration//GEN-END:variables
}